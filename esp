local modstuff = game.StarterGui.ModStuff
modstuff.Parent = game.Players.LocalPlayer.PlayerGui
modstuff.Stuff.Visible = true

--[[local success, response = pcall(function()
	for i,v in game.Players.LocalPlayer.PlayerGui.Panel:GetChildren() do
		v.Visible = true
	end
end)

local success, response = pcall(warn("Completed"))

if not success then
	warn("There was an error, couldnt be completed.")
end]]

modstuff.Stuff.Position = UDim2.new(0.5, 0, 0.5, 0)
modstuff.Stuff.AnchorPoint = Vector2.new(0.5, 0.5)

local frame = modstuff.Stuff
local dragToggle = nil
local dragSpeed = 0.25
local dragStart = nil
local startPos = nil

local UIS = game:GetService("UserInputService")

local function updateInput(input)
	local delta = input.Position - dragStart
	local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
		startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
end

frame.InputBegan:Connect(function(input)
	if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
		dragToggle = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragToggle = false
			end
		end)
	end
end)

UIS.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		if dragToggle then
			updateInput(input)
		end
	end
end)
